{
	  "AWSTemplateFormatVersion": "2010-09-09",

    "Description" : "This stack will create a Lambda Function that will execute EBS Snapshots against any instance with a tag-value that matches the Product parameter.",

    "Metadata" : {
		    "Client" : "Siemens",
		    "Author" : "Nordcloud",
		    "Project" : "Digitial Grid Services"
    },
    
    "Parameters": {
		    "VpcIdentification" : {
            "Description" : "VpcId used to create subnets",
            "Type": "List<AWS::EC2::VPC::Id>"
		    },
		    "BucketName" : {
            "Description": "The name of the bucket where the lambda code is stored",
            "Type": "String"
        },
        "S3Key" : {
            "Description": "The name of the S3 Key like \"folder/file.zip\"",
            "Type": "String"
        },
        "Product" : {
            "Description": "The name of the S3 Key like \"folder/file.zip\"",
            "Type": "String"
        },
        "Retention" : {
            "Description": "The number of days you will keep the snapshots.",
            "Type": "String"
        }
    },

    "Resources": {

    "LambdaExecutionRole": {

        "Type": "AWS::IAM::Role",
  			"Properties": {
    			"AssumeRolePolicyDocument": {
      				"Version": "2012-10-17",
      				"Statement": [{
        				"Effect": "Allow",
        				"Principal": {"Service": ["lambda.amazonaws.com"]},
        				"Action": ["sts:AssumeRole"]
      				}]
    			},
    			"Path": "/",
    			"Policies": [{
      				"PolicyName": "root",
      				"PolicyDocument": {
        				"Version": "2012-10-17",
        				"Statement": [
							{
          						"Effect": "Allow",
          						"Action": [
          							"logs:CreateLogGroup",
          							"logs:CreateLogStream",
          							"logs:PutLogEvents"
          						],
          						"Resource": "arn:aws:logs:*:*:*"
        					},
        				    {
          						"Effect": "Allow",
          						"Action": [ "ec2:Describe*" ],
          						"Resource": "*"
        				    },
        				    {
          						"Effect": "Allow",
          						"Action": [ 
          							"ec2:CreateSnapshot",
          							"ec2:CreateTags",
                        "ec2:DeleteSnapshot",
                        "ec2:ModifySnapshotAttribute",
                        "ec2:ResetSnapshotAttribute"
          						],
          						"Resource": "*"
        				    }
        				]
      				}
    			}]
  			}
		},

		"DailySnapperFunction": {
        "Type": "AWS::Lambda::Function",
  			"Properties": {
    			"Code": {
      				"S3Bucket": { "Ref" : "BucketName" },
      				"S3Key": { "Ref" : "S3Key" }
    			},
    			"Handler": "lambsnapper.lambda_handler",
    			"Runtime": "python2.7",
    			"Timeout": "20",
    			"Role": { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] }
  			}
		},

    "MonthlySnapperFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
              "S3Bucket": { "Ref" : "BucketName" },
              "S3Key": { "Ref" : "S3Key" }
          },
          "Handler": "lambsnapper.lambda_handler",
          "Runtime": "python2.7",
          "Timeout": "20",
          "Role": { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] }
        }
    },

		"DailySnapSchedule": {
  			"Type": "AWS::Events::Rule",
  			"Properties": {
    			"Description": { "Fn::Join" : ["", [
              "This is the daily snapshot taker for ",
              { "Ref" : "Product" }
          ]]},
    			"ScheduleExpression": "rate(1 day)",
    			"State": "ENABLED",
    			"Targets": [{
      				"Arn": { "Fn::GetAtt": ["DailySnapperFunction", "Arn"] },
      				"Id": "DailySnapperFunctionV1",
      				"Input": { "Fn::Join" : ["", [
      					"{",
      					" \"Region\": \"", { "Ref" : "AWS::Region" }, "\", ",
      					" \"Product\": \"", { "Ref" : "Product" }, "\", ",
                " \"Retention\": \"", { "Ref" : "Retention" }, "\", ",
                " \"Period\": \"Daily\" ",
      					"}"
      				]]}
    			}]
  			}
		},

    "MonthlySnapSchedule": {
        "Type": "AWS::Events::Rule",
        "Properties": {
          "Description": { "Fn::Join" : ["", [
              "This is the monthly snapshot taker for ",
              { "Ref" : "Product" }
          ]]},
          "ScheduleExpression": "rate(30 days)",
          "State": "ENABLED",
          "Targets": [{
              "Arn": { "Fn::GetAtt": ["MonthlySnapperFunction", "Arn"] },
              "Id": "MonthlySnapperFunctionV1",
              "Input": { "Fn::Join" : ["", [
                "{",
                " \"Region\": \"", { "Ref" : "AWS::Region" }, "\", ",
                " \"Product\": \"", { "Ref" : "Product" }, "\", ",
                " \"Retention\": \"", { "Ref" : "Retention" }, "\", ",
                " \"Period\": \"Monthly\" ",
                "}"
              ]]}
          }]
        }
    },

		"DailyEventLambdaPermission": {
  			"Type": "AWS::Lambda::Permission",
  			"Properties": {
    			"FunctionName": { "Ref": "DailySnapperFunction" },
    			"Action": "lambda:InvokeFunction",
    			"Principal": "events.amazonaws.com",
    			"SourceArn": { "Fn::GetAtt": ["DailySnapSchedule", "Arn"] }
  			}
		},

    "MonthlyEventLambdaPermission": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "FunctionName": { "Ref": "MonthlySnapperFunction" },
          "Action": "lambda:InvokeFunction",
          "Principal": "events.amazonaws.com",
          "SourceArn": { "Fn::GetAtt": ["MonthlySnapSchedule", "Arn"] }
        }
    }

	},

	"Outputs": {

	}
}
